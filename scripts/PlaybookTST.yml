---
- hosts: APP_M
  remote_user: ec2-user
  become_method: sudo
  vars:
    login: '{{ APP_USER }}'
    password: '{{ APP_PASS }}'
    project_dir: /home/vagrant/test_env
    app_dir: /home/{{ login }}/working_app

  tasks:
  - name: Create application user
    user:
      name: '{{ login }}'
      password: '{{ password }}'
    become: yes
  - name: install git and java
    yum:
      name: 
      - git
      - java-1.8.0-openjdk-devel
      - MySQL-python
      state: present
    become: yes
  
  # - name: clone git repository
  #   git:
  #     repo: 'https://github.com/DmyMi/spring-petclinic'
  #     dest: "{{ project_dir }}"
  #   register: latest_version
      
  # - name: inastall maven and run application build
  #   shell: |
  #     cd {{ project_dir }}
  #     {{ project_dir }}/mvnw  package
  #   when: latest_version is changed

  - name: mkdir for application user
    file:
      path: "{{ app_dir }}"
      state: directory
    become: yes
    #when: latest_version is changed

  - name: check connect to db
    wait_for:
      delay: 30
      host: 10.10.0.115
      port: 3306
      

  - name: check user abilities
    mysql_db:
      login_user: "{{ DB_USER }}"
      login_password: "{{ DB_PASS }}"
      login_host: "{{ DB_HOST }}"
      name: "{{ DB_NAME }}"
      state: present

  - name: copy jar to application
    copy:
      src: '{{ item }}' 
      dest: '{{ app_dir }}'
      owner: '{{ login }}' 
    become: yes
    with_fileglob:
      - ../target/*.jar

  - name: extract name of jar file
    shell: ls {{ app_dir }}
    register: output
    become: yes
  
  - name: copy service template
    template:
      src: ./service.template
      dest: /etc/systemd/system/petclinic.service
    become: yes
    register: new_config
    with_items:
      - '{{ output.stdout_lines }}'

  - name: daemon reload and run app
    systemd:
      daemon_reload: yes
      name: petclinic.service
      state: started
    become: yes
    when: new_config is changed
    environment:
      DB_USER: '{{ DB_USER }}'
      DB_NAME: '{{ DB_NAME }}'
      DB_PASS: '{{ DB_PASS }}'
      DB_HOST: '{{ DB_HOST }}'
      DB_PORT: '{{ DB_PORT }}'

  # - name: run app
  #   shell: su -c "java -jar {{ app_dir }}/*.jar &" {{ login }}
  #   become: yes
  #   environment:
  #     DB_USER: '{{ DB_USER }}'
  #     DB_NAME: '{{ DB_NAME }}'
  #     DB_PASS: '{{ DB_PASS }}'
  #     DB_HOST: '{{ DB_HOST }}'
  #     DB_PORT: '{{ DB_PORT }}'

